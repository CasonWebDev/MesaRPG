export const mockCampaigns = {
  basic: {
    id: 'test-campaign-id',
    name: 'Test Campaign',
    description: 'A basic test campaign',
    rpgSystem: 'dnd5e',
    ownerId: 'test-gm-id',
    isActive: true,
    playerLimit: 8,
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
  withMembers: {
    id: 'test-campaign-with-members-id',
    name: 'Campaign with Members',
    description: 'A campaign with multiple members',
    rpgSystem: 'dnd5e',
    ownerId: 'test-gm-id',
    isActive: true,
    playerLimit: 6,
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
    members: [
      {
        id: 'test-member-1',
        userId: 'test-player-id',
        campaignId: 'test-campaign-with-members-id',
        role: 'PLAYER',
        joinedAt: new Date().toISOString(),
      },
    ],
  },
  pathfinder: {
    id: 'test-pathfinder-campaign-id',
    name: 'Pathfinder Campaign',
    description: 'A Pathfinder 2e campaign',
    rpgSystem: 'pathfinder2e',
    ownerId: 'test-gm-id',
    isActive: true,
    playerLimit: 4,
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString(),
  },
}

export const mockGameStates = {
  basic: {
    id: 'test-game-state-id',
    campaignId: 'test-campaign-id',
    activeMapId: 'test-map-id',
    tokens: JSON.stringify([]),
    gameData: JSON.stringify({}),
    gridConfig: JSON.stringify({}),
    fogAreas: JSON.stringify([]),
    mapFrozen: false,
    frozenBy: null,
    frozenAt: null,
    lastActivity: new Date().toISOString(),
  },
  withTokens: {
    id: 'test-game-state-with-tokens-id',
    campaignId: 'test-campaign-id',
    activeMapId: 'test-map-id',
    tokens: JSON.stringify([
      {
        id: 'test-token-id',
        name: 'Test Token',
        position: { x: 100, y: 100 },
        src: '/test-token.png',
        characterId: 'test-character-id',
      },
    ]),
    gameData: JSON.stringify({}),
    gridConfig: JSON.stringify({}),
    fogAreas: JSON.stringify([]),
    mapFrozen: false,
    frozenBy: null,
    frozenAt: null,
    lastActivity: new Date().toISOString(),
  },
}